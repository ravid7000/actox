!function(t,e){"object"===typeof exports&&"object"===typeof module?module.exports=e():"function"===typeof define&&define.amd?define("actox",[],e):"object"===typeof exports?exports.actox=e():t.actox=e()}("undefined"!==typeof self?self:this,function(){return function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"===typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="/",r(r.s=0)}([function(t,e,r){"use strict";function n(t){return null!==t&&"object"===typeof t}function o(t){var e=Object.prototype.toString;if(!t)return!1;var r=e.call(t);return"[object Function]"===r||"[object AsyncFunction]"===r||"[object GeneratorFunction]"===r||"[object Proxy]"===r}function i(t){console.error("[ACTOX Store]",t)}function a(t){try{if(!t||!n(t))throw new Error("Invalid state object. State should be an object of objects.");return!0}catch(e){return i(e),!1}}r.r(e);var c=function(){var t=null;return{get:function(){return t},set:function(e){t=e}}}();function u(t,e){var r=c.get();return!!r&&(!!r.logger&&(!!r.state&&(console.group("[ACTOX Store]"),console.log(t,e),console.log("State",r.state),void console.groupEnd())))}function s(t,e){var r=c.get();try{if(!t)throw new Error("To update a state, type must be provided.");if(!r)throw new Error("Initialize store first with createStore()");if(!r.state)return;if(r.isDispatching)throw new Error("You may not call updateState() while executing updateState().");r.isDispatching=!0,c.set(r);var o=r.state;if(n(e)){var a=o[t];if(a){var s=Object.assign({},a,e);o[t]=s,r.state=o,c.set(Object.assign({},r)),u("Update: "+t,e)}}}catch(f){i(f)}finally{r.isDispatching=!1,c.set(r),function(){if(!c.get())return null;for(var t=c.get().listeners,e=0;e<t.length;e++)t[e]()}()}}function f(t){var e,r=c.get();try{if(!t)throw new Error("To dispatch an action, type must be provided.");if(!r)throw new Error("Initialize store first with createStore()");if(r.state){if(!o(e=r.actionListener)&&!n(e))throw new Error("Invalid type of action listener is provided");u("Dispatch:",'"'.concat(t,'"'));for(var a=arguments.length,f=new Array(a>1?a-1:0),l=1;l<a;l++)f[l-1]=arguments[l];if(o(r.actionListener))r.actionListener.apply(void 0,[t,s].concat(f));else if(n(r.actionListener)){var d=r.actionListener[t];o(d)&&d.apply(void 0,[s].concat(f))}}}catch(p){i(p)}}function l(){try{if(!c.get())return null;if(c.get().isDispatching)throw new Error("You may not call getState() while executing updateState().");return c.get().state}catch(t){i(t)}}function d(t){try{if(!c.get())return null;if(c.get().isDispatching)throw new Error("You may not call addState() while executing updateState().");if(a(t)){var e=Object.assign({},c.get().state,t),r=c.get();r.state=e,c.set(r),u("State: new state added",t)}}catch(n){i(n)}}function p(t){try{if(!o(t))throw new Error("Expected the listener to be a function.");if(!c.get())return null;var e=c.get();e.listeners.push(t),c.set(e)}catch(r){i(r)}}function g(t,e,r){a(t);var n={state:t,logger:r,actionListener:e,isDispatching:!1,listeners:[]};return c.set(n),u("Init:","store"),{getState:l,updateState:s,dispatch:f,subscribe:p,addState:d}}var h=s,y=f,b=l,v=p,w=d;r.d(e,"createStore",function(){return g}),r.d(e,"getState",function(){return b}),r.d(e,"subscribe",function(){return v}),r.d(e,"dispatch",function(){return y}),r.d(e,"addState",function(){return w}),r.d(e,"updateState",function(){return h})}])});
//# sourceMappingURL=actox.min.js.map